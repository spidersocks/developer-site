ASCII Directory Tree
developer-site/
└── frontend/
    ├── .env.local
    ├── html/
    ├── package.json
    ├── package-lock.json
    ├── vercel.json
    ├── vite.config.js
    └── public/
        ├── Logo/
        │   ├── stethoscribe.png
        │   └── stethoscribe-16x16.png
        └── audio processor/
    └── src/
        ├── aws/
        │   └── amplifyConfig.js
        └── apps/
            └── MedicalScribe/
                ├── App.jsx
                ├── App.css
                ├── AuthGate.jsx
                ├── AuthGate.module.css
                ├── MedicalScribeDemo.jsx
                ├── MedicalScribeDemo.module.css
                ├── assets/
                ├── utils/
                │   ├── apiClient.js
                │   ├── constants.js
                │   ├── helpers.js
                │   ├── index.js
                │   ├── noteFormatters.js
                │   └── syncService.js
                ├── hooks/
                │   ├── useAudioRecording.js
                │   └── useConsultations.js
                └── components/
                    ├── Notes/
                    │   ├── CommandBar.jsx
                    │   ├── CommandBar.module.css
                    │   ├── HighlightedText.jsx
                    │   ├── HighlightedText.module.css
                    │   ├── NoteEditor.jsx
                    │   └── NoteEditor.module.css
                    ├── Patient/
                    │   ├── NewPatientModal.jsx
                    │   ├── NewPatientModal.module.css
                    │   ├── PatientInfoPanel.jsx
                    │   └── PatientInfoPanel.module.css
                    ├── Sidebar/
                    │   ├── Sidebar.jsx
                    │   └── Sidebar.module.css
                    ├── Transcript/
                    │   ├── TranscriptPanel.jsx
                    │   ├── TranscriptPanel.module.css
                    │   ├── TranscriptSegment.jsx
                    │   └── TranscriptSegment.module.css
                    └── shared/
                        ├── Icons.jsx
                        ├── LoadingAnimation.jsx
                        ├── LoadingAnimation.module.css
                        ├── Modal.jsx
                        └── Modal.module.css
Notes on key files (updated)
App.jsx (MedicalScribe)
Core layout unchanged (Sidebar + main workspace + tab panels). Now includes a background-sync flush effect that periodically invokes syncService.flushAll() and reacts to visibilitychange, focus, and online events when ENABLE_BACKGROUND_SYNC is true.

App.css
Continues to provide design tokens, global layout primitives, and shared styles.

AuthGate.jsx / AuthGate.module.css
Cognito route guard and scoped styling.

MedicalScribeDemo.jsx / MedicalScribeDemo.module.css
Standalone demo experience with isolated styles.

utils/constants.js
Still exports backend URLs, defaults, etc. Now also exposes the ENABLE_BACKGROUND_SYNC feature flag (via import.meta.env.VITE_ENABLE_BACKGROUND_SYNC).

utils/syncService.js (new)
In-memory queue managing DynamoDB writes for patients, consultations, and transcript segments using the AWS SDK v3 (@aws-sdk/client-dynamodb). Every enqueue is gated behind ENABLE_BACKGROUND_SYNC.

utils/index.js (new)
Barrel file for re-exporting utilities (now includes syncService, along with existing helpers if desired).

hooks/useConsultations.js
Keeps localStorage persistence for patients/consultations. After local updates, it conditionally enqueues background sync tasks (patient/consultation upserts) via syncService when enabled.

hooks/useAudioRecording.js
Maintains the WebSocket transcription pipeline and Web Audio capture. Finalized transcript segments are now enqueued for background syncing with consultation-specific segment indexes.

components (Notes, Patient, Sidebar, Transcript, shared)
Structure unchanged; each component continues to use scoped CSS modules.

Data & sync flow (updated)
Local state & persistence remain powered by useConsultations and localStorage.
Background sync (opt-in)
VITE_ENABLE_BACKGROUND_SYNC=true turns on remote mirroring.
useConsultations queues patient/consultation upserts.
useAudioRecording queues transcript segments.
App.jsx periodically flushes the queue and responds to browser lifecycle events.
Note generation pipeline unchanged (useAudioRecording → /generate-final-note → consultation notes).
Styling & assets
App.css provides global tokens; component styles remain isolated in .module.css.
Static assets (logos, audio processor worklet) stay under public/.
Persistence recap
LocalStorage still manages patients, consultations, and activeConsultationId.
DynamoDB sync (optional) kicks in when the feature flag is enabled and AWS credentials are configured in the environment.